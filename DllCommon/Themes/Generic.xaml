<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:local="clr-namespace:Common">
	<BooleanToVisibilityConverter x:Key="BTVConverter"/>
	<SolidColorBrush x:Key="ControlFocusColor" Color="DeepSkyBlue"/>
	<SolidColorBrush x:Key="ControlPressedColor" Color="SteelBlue"/>
	<SolidColorBrush x:Key="ControlCheckedColor" Color="YellowGreen"/>
	<SolidColorBrush x:Key="OscilloscopeBackground" Color="White"/>
	<SolidColorBrush x:Key="OscilloscopeForeground" Color="Black"/>
	<SolidColorBrush x:Key="AxisColor" Color="Black"/>
	<SolidColorBrush x:Key="TransparentColor" Color="Transparent"/>
	<SolidColorBrush x:Key="InvalidColor" Color="#7F000000"/>
	<SolidColorBrush x:Key="TitleColor" Color="#FFEECCFF"/>
	<SolidColorBrush x:Key="HighlightColor" Color="#FFFF7777"/>
	<s:Double x:Key="ControlMinHeight">24</s:Double>
	<s:String x:Key="Text_Clear">清空</s:String>
	<Style x:Key="RepeatButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{StaticResource TransparentColor}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="Handle" RadiusX="2" RadiusY="2" Fill="{TemplateBinding Foreground}"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Handle" Property="Fill" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="Handle" Property="Fill" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Border Background="{StaticResource InvalidColor}" CornerRadius="2">
			<Track x:Name="PART_Track" IsDirectionReversed="True">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource RepeatButton}" Command="ScrollBar.PageUpCommand"/>
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding local:Properties.FocusColor}" BorderBrush="{TemplateBinding local:Properties.PressedColor}"/>
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource RepeatButton}" Command="ScrollBar.PageDownCommand"/>
				</Track.IncreaseRepeatButton>
			</Track>
		</Border>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		<Border Background="{StaticResource InvalidColor}" CornerRadius="2">
			<Track x:Name="PART_Track" IsDirectionReversed="False">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource RepeatButton}" Command="ScrollBar.PageLeftCommand"/>
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding local:Properties.FocusColor}" BorderBrush="{TemplateBinding local:Properties.PressedColor}"/>
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource RepeatButton}" Command="ScrollBar.PageRightCommand"/>
				</Track.IncreaseRepeatButton>
			</Track>
		</Border>
	</ControlTemplate>
	<Style x:Key="ScrollBar" TargetType="{x:Type ScrollBar}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="Height" Value="8"/>
				<Setter Property="Margin" Value="0,4,0,0"/>
				<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="8"/>
				<Setter Property="Height" Value="Auto"/>
				<Setter Property="Margin" Value="4,0,0,0"/>
				<Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ScrollViewer" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Background" Value="{StaticResource OscilloscopeBackground}"/>
		<Setter Property="Foreground" Value="{StaticResource OscilloscopeForeground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource OscilloscopeForeground}"/>
		<Setter Property="local:Properties.FocusColor" Value="{StaticResource ControlFocusColor}"/>
		<Setter Property="local:Properties.PressedColor" Value="{StaticResource ControlPressedColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ScrollContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True"/>
						<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Margin="4,0,0,0" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Foreground="{TemplateBinding Foreground}" local:Properties.FocusColor="{TemplateBinding local:Properties.FocusColor}" local:Properties.PressedColor="{TemplateBinding local:Properties.PressedColor}" Style="{StaticResource ScrollBar}"/>
						<ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Margin="0,4,0,0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Foreground="{TemplateBinding Foreground}" local:Properties.FocusColor="{TemplateBinding local:Properties.FocusColor}" local:Properties.PressedColor="{TemplateBinding local:Properties.PressedColor}" Style="{StaticResource ScrollBar}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
	</Style>
	<Style x:Key="ToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="local:Properties.FocusColor" Value="{StaticResource ControlFocusColor}"/>
		<Setter Property="local:Properties.PressedColor" Value="{StaticResource ControlPressedColor}"/>
		<Setter Property="local:Properties.CheckedColor" Value="{StaticResource ControlCheckedColor}"/>
		<Setter Property="Height" Value="24"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid SnapsToDevicePixels="True" Background="{StaticResource TransparentColor}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="Mark" Margin="0,0,8,0" VerticalAlignment="Center" Fill="{StaticResource InvalidColor}" Width="12" Height="4"/>
						<TextBlock x:Name="Label" Grid.Column="1" IsHitTestVisible="False" SnapsToDevicePixels="True" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Mark" Property="Fill" Value="{Binding Path=(local:Properties.CheckedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(local:Properties.FocusColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(local:Properties.PressedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Button" TargetType="{x:Type Button}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Background" Value="{StaticResource TransparentColor}"/>
		<Setter Property="Foreground" Value="{StaticResource OscilloscopeForeground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource OscilloscopeForeground}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="local:Properties.FocusColor" Value="{StaticResource ControlFocusColor}"/>
		<Setter Property="local:Properties.PressedColor" Value="{StaticResource ControlPressedColor}"/>
		<Setter Property="local:Properties.CornerRadius" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding local:Properties.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<TextBlock x:Name="Label" Grid.Column="1" IsHitTestVisible="False" SnapsToDevicePixels="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" TextAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(local:Properties.FocusColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(local:Properties.PressedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Button}">
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding local:Properties.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Path x:Name="Icon" Grid.Column="1" IsHitTestVisible="False" SnapsToDevicePixels="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Data="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Fill="{TemplateBinding Foreground}" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}" Stretch="Uniform"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Icon" Property="Fill" Value="{Binding Path=(local:Properties.FocusColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Icon" Property="Fill" Value="{Binding Path=(local:Properties.PressedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="Border" Padding="8,4" SnapsToDevicePixels="True" Background="{StaticResource TransparentColor}" BorderThickness="{TemplateBinding BorderThickness}">
						<TextBlock x:Name="Content" IsHitTestVisible="False" SnapsToDevicePixels="True" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{TemplateBinding Content}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"/>
							<Setter TargetName="Content" Property="Foreground" Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:Properties.FocusColor), RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="local:Properties.FocusColor" Value="{StaticResource ControlFocusColor}"/>
		<Setter Property="local:Properties.PressedColor" Value="{StaticResource ControlPressedColor}"/>
		<Setter Property="local:Properties.CheckedColor" Value="{StaticResource ControlCheckedColor}"/>
		<Setter Property="Background" Value="{StaticResource OscilloscopeBackground}"/>
		<Setter Property="Foreground" Value="{StaticResource OscilloscopeForeground}"/>
		<Setter Property="IsEditable" Value="False"/>
		<Setter Property="MinHeight" Value="{StaticResource ControlMinHeight}"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItem}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
						<ToggleButton x:Name="ContentSite" SnapsToDevicePixels="True" Focusable="False" Content="{TemplateBinding SelectionBoxItem}" Background="{StaticResource TransparentColor}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" local:Properties.FocusColor="{TemplateBinding local:Properties.FocusColor}" local:Properties.PressedColor="{TemplateBinding local:Properties.PressedColor}" local:Properties.CheckedColor="{TemplateBinding local:Properties.CheckedColor}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
							<ToggleButton.Template>
								<ControlTemplate TargetType="{x:Type ToggleButton}">
									<Border x:Name="Border" Padding="6,2" SnapsToDevicePixels="True" Background="{StaticResource TransparentColor}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<TextBlock x:Name="Label" IsHitTestVisible="False" SnapsToDevicePixels="True" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
											<Polygon x:Name="Mark" Grid.Column="1" Margin="8,0,0,0" IsHitTestVisible="False" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" Stretch="Uniform" Points="0,0 10,0 5,8"/>
										</Grid>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:Properties.FocusColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
											<Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(local:Properties.FocusColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
											<Setter TargetName="Mark" Property="Fill" Value="{Binding Path=(local:Properties.FocusColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
										</Trigger>
										<Trigger Property="IsPressed" Value="True">
											<Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:Properties.PressedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
											<Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(local:Properties.PressedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
											<Setter TargetName="Mark" Property="Fill" Value="{Binding Path=(local:Properties.PressedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
										</Trigger>
										<Trigger Property="IsChecked" Value="True">
											<Setter TargetName="Label" Property="Foreground" Value="{Binding Path=(local:Properties.CheckedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
											<Setter TargetName="Mark" Property="Fill" Value="{Binding Path=(local:Properties.CheckedColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>
						<Popup x:Name="Popup" Placement="Bottom" SnapsToDevicePixels="True" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="False" Focusable="False">
							<Border SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Padding="4,6,4,6" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding Foreground}">
								<ScrollViewer Padding="0" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Foreground="{TemplateBinding Foreground}" local:Properties.FocusColor="{TemplateBinding local:Properties.FocusColor}" local:Properties.PressedColor="{TemplateBinding local:Properties.CheckedColor}" Style="{StaticResource ScrollViewer}">
									<StackPanel SnapsToDevicePixels="True" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TextBox" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="MinHeight" Value="{StaticResource ControlMinHeight}"/>
		<Setter Property="AllowDrop" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="PART_ContentHost"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:Properties.FocusColor), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type local:MessageControl}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Padding" Value="12,8"/>
		<Setter Property="Background" Value="{StaticResource OscilloscopeBackground}"/>
		<Setter Property="Foreground" Value="{StaticResource OscilloscopeForeground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource HighlightColor}"/>
		<Setter Property="local:Properties.FocusColor" Value="{StaticResource ControlFocusColor}"/>
		<Setter Property="local:Properties.PressedColor" Value="{StaticResource ControlPressedColor}"/>
		<Setter Property="BorderThickness" Value="8,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:MessageControl}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Rectangle Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" SnapsToDevicePixels="True"/>
						<ScrollViewer x:Name="ScrollViewer" Grid.Row="2" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" Padding="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Foreground="{TemplateBinding Foreground}" local:Properties.FocusColor="{TemplateBinding local:Properties.FocusColor}" local:Properties.PressedColor="{TemplateBinding local:Properties.PressedColor}" Style="{StaticResource ScrollViewer}">
							<TextBlock TextWrapping="Wrap" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" SnapsToDevicePixels="True"/>
						</ScrollViewer>
						<Border Grid.RowSpan="2" Margin="12,0,0,0" HorizontalAlignment="Left" Background="{TemplateBinding Background}" Padding="{TemplateBinding BorderThickness}">
							<TextBlock x:Name="Label" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Foreground="{TemplateBinding BorderBrush}" Text="{TemplateBinding Label}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" SnapsToDevicePixels="True"/>
						</Border>
						<Button x:Name="BtnClear" Grid.RowSpan="2" Grid.Column="1" Margin="0,0,12,0" HorizontalAlignment="Right" VerticalAlignment="Center" Padding="8,0" Background="{TemplateBinding Background}" Foreground="{TemplateBinding BorderBrush}" BorderBrush="{TemplateBinding BorderBrush}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" local:Properties.CornerRadius="4" Style="{StaticResource Button}" Content="×" ToolTip="{StaticResource Text_Clear}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>